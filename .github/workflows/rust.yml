name: Rust

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
        - aarch64-unknown-linux-gnu
        - arm-unknown-linux-gnueabi
        - armv7-unknown-linux-gnueabihf
        - x86_64-unknown-linux-gnu

    steps:
    - uses: actions/checkout@v2
    - name: Install cross
      run: cargo install cross --force
    - name: Build
      run: |
        cross build --target ${{ matrix.target }} --locked
        cross build --target ${{ matrix.target }} --release --locked
    - name: Run tests
      run: |
        cross test --target ${{ matrix.target }} --locked
        cross test --target ${{ matrix.target }} --release --locked
    - name: Tarball release
      run: |
        tar czf ruuvitag-listener.tar.gz -C target/${{ matrix.target }}/release/ ruuvitag-listener
    - name: Upload binary
      uses: actions/upload-artifact@v2
      with:
        name: ruuvitag-listener-${{ matrix.target }}.tar.gz
        path: ruuvitag-listener.tar.gz
  create_release:
    name: Create release
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: false
        prerelease: false
  upload_release_assets:
    name: Upload release assets
    if: startsWith(github.ref, 'refs/tags/v')
    needs: create_release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
        - aarch64-unknown-linux-gnu
        - arm-unknown-linux-gnueabi
        - armv7-unknown-linux-gnueabihf
        - x86_64-unknown-linux-gnu
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: ruuvitag-listener-${{ matrix.target }}.tar.gz
    - run: ls -lR
    - name: Upload release asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./ruuvitag-listener.tar.gz
        asset_name: ruuvitag-listener-${{ github.ref }}-${{ matrix.target }}.tar.gz
        asset_content_type: application/gzip
